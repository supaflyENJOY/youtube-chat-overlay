name: Release Tauri App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tauri.conf.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' src-tauri/tauri.conf.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}-${{ github.run_number }}
          release_name: Release v${{ steps.get_version.outputs.version }}-${{ github.run_number }}
          body: |
            Automated release for version ${{ steps.get_version.outputs.version }}
          draft: true
          prerelease: false

  build-tauri:
    needs: create-release
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-pc-windows-msvc

      - name: Install dependencies (frontend)
        run: npm install

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Build Tauri app
        run: npm run tauri build -- --target x86_64-pc-windows-msvc
        working-directory: ./src-tauri

      - name: Get version from tauri.conf.json
        id: get_version
        run: |
          $VERSION = (Get-Content src-tauri/tauri.conf.json | ConvertFrom-Json).version
          echo "version=$VERSION" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
        shell: pwsh

      - name: Upload Release Asset (EXE)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./src-tauri/target/x86_64-pc-windows-msvc/release/youtube-chat-overlay.exe
          asset_name: youtube-chat-overlay_v${{ steps.get_version.outputs.version }}_x64.exe
          asset_content_type: application/vnd.microsoft.portable-executable

  publish-release:
    needs: [create-release, build-tauri]
    runs-on: ubuntu-latest
    steps:
      - name: Publish Release
        uses: StuYarrow/publish-release@v1.1.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          id: ${{ needs.create-release.outputs.release_id }}

permissions:
  contents: write
  actions: read
